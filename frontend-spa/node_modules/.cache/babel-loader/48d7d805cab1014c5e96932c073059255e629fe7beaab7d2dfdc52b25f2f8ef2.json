{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cep: \"\",\n    endereco: null,\n    error: null,\n    loading: false\n  },\n  mutations: {\n    setCep(state, cep) {\n      state.cep = cep;\n    },\n    setEndereco(state, endereco) {\n      state.endereco = endereco;\n    },\n    setError(state, error) {\n      state.error = error;\n    },\n    setLoading(state, loading) {\n      state.loading = loading;\n    }\n  },\n  actions: {\n    async pesquisarCEP({\n      commit,\n      state\n    }) {\n      commit('setLoading', true);\n      commit('setError', null);\n      commit('setEndereco', null);\n      const cepLimpo = state.cep.replace(\"-\", \"\");\n      try {\n        const response = await fetch(`http://localhost:8000/api/cep?cep=${cepLimpo}`);\n        if (!response.ok) {\n          throw new Error(\"Erro ao buscar o CEP.\");\n        }\n        const data = await response.json();\n        commit('setEndereco', data);\n      } catch (err) {\n        commit('setError', err.message);\n      } finally {\n        commit('setLoading', false);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","cep","endereco","error","loading","mutations","setCep","setEndereco","setError","setLoading","actions","pesquisarCEP","commit","cepLimpo","replace","response","fetch","ok","Error","data","json","err","message","modules"],"sources":["C:/teste/frontend-spa/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nexport default createStore({\r\n  state: {\r\n    cep: \"\",\r\n    endereco: null,\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  mutations: {\r\n    setCep(state, cep) {\r\n      state.cep = cep;\r\n    },\r\n    setEndereco(state, endereco) {\r\n      state.endereco = endereco;\r\n    },\r\n    setError(state, error) {\r\n      state.error = error;\r\n    },\r\n    setLoading(state, loading) {\r\n      state.loading = loading;\r\n    },\r\n  },\r\n  actions: {\r\n    async pesquisarCEP({ commit, state }) {\r\n      commit('setLoading', true);\r\n      commit('setError', null);\r\n      commit('setEndereco', null);\r\n\r\n      const cepLimpo = state.cep.replace(\"-\", \"\");\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/cep?cep=${cepLimpo}`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Erro ao buscar o CEP.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        commit('setEndereco', data);\r\n      } catch (err) {\r\n        commit('setError', err.message);\r\n      } finally {\r\n        commit('setLoading', false);\r\n      }\r\n    },\r\n  },\r\n  modules: {},\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTC,MAAMA,CAACN,KAAK,EAAEC,GAAG,EAAE;MACjBD,KAAK,CAACC,GAAG,GAAGA,GAAG;IACjB,CAAC;IACDM,WAAWA,CAACP,KAAK,EAAEE,QAAQ,EAAE;MAC3BF,KAAK,CAACE,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDM,QAAQA,CAACR,KAAK,EAAEG,KAAK,EAAE;MACrBH,KAAK,CAACG,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDM,UAAUA,CAACT,KAAK,EAAEI,OAAO,EAAE;MACzBJ,KAAK,CAACI,OAAO,GAAGA,OAAO;IACzB;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAC;MAAEC,MAAM;MAAEZ;IAAM,CAAC,EAAE;MACpCY,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC1BA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;MACxBA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAE3B,MAAMC,QAAQ,GAAGb,KAAK,CAACC,GAAG,CAACa,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MAE3C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCH,QAAQ,EAAE,CAAC;QAC7E,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCR,MAAM,CAAC,aAAa,EAAEO,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZT,MAAM,CAAC,UAAU,EAAES,GAAG,CAACC,OAAO,CAAC;MACjC,CAAC,SAAS;QACRV,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;MAC7B;IACF;EACF,CAAC;EACDW,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}