{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Pesquisa de CEP\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cep = $event),\n    placeholder: \"Digite o CEP (somente números)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cep]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.buscarCEP && $options.buscarCEP(...args))\n  }, \"Pesquisar\"), $data.resultado ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Resultado:\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"CEP:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.resultado.cep), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Logradouro:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.resultado.logradouro), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Bairro:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.resultado.bairro), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Cidade:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.resultado.localidade), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Estado:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.resultado.uf), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), $data.erro ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.erro), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","_createElementVNode","_cache","$event","$data","cep","placeholder","onClick","args","$options","buscarCEP","resultado","_hoisted_1","_createTextVNode","_toDisplayString","logradouro","bairro","localidade","uf","_createCommentVNode","erro","_hoisted_2"],"sources":["C:\\xampp\\htdocs\\teste\\frontend-spa\\src\\views\\Pesquisa.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Pesquisa de CEP</h1>\r\n      <input v-model=\"cep\" placeholder=\"Digite o CEP (somente números)\" />\r\n      <button @click=\"buscarCEP\">Pesquisar</button>\r\n  \r\n      <div v-if=\"resultado\">\r\n        <h2>Resultado:</h2>\r\n        <p><strong>CEP:</strong> {{ resultado.cep }}</p>\r\n        <p><strong>Logradouro:</strong> {{ resultado.logradouro }}</p>\r\n        <p><strong>Bairro:</strong> {{ resultado.bairro }}</p>\r\n        <p><strong>Cidade:</strong> {{ resultado.localidade }}</p>\r\n        <p><strong>Estado:</strong> {{ resultado.uf }}</p>\r\n      </div>\r\n  \r\n      <div v-if=\"erro\" style=\"color: red;\">\r\n        {{ erro }}\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        cep: \"\",\r\n        resultado: null,\r\n        erro: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async buscarCEP() {\r\n        this.resultado = null;\r\n        this.erro = null;\r\n  \r\n        if (!/^\\d{8}$/.test(this.cep)) {\r\n          this.erro = \"CEP inválido. Digite um CEP com 8 números.\";\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/api/cep?cep=${this.cep}`);\r\n          this.resultado = response.data;\r\n        } catch (error) {\r\n          this.erro = error.response?.data?.error || \"Erro ao buscar o CEP.\";\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAeuBC,KAAmB,EAAnB;IAAA;EAAA;;;uBAdnBC,mBAAA,CAiBM,c,0BAhBJC,mBAAA,CAAwB,YAApB,iBAAe,sB,gBACnBA,mBAAA,CAAoE;IAH1E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,KAAA,CAAAC,GAAG,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAjBF,KAAA,CAAAC,GAAG,E,GACnBJ,mBAAA,CAA6C;IAApCM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,WAAS,GAEzBJ,KAAA,CAAAO,SAAS,I,cAApBX,mBAAA,CAOM,OAbZY,UAAA,G,0BAOQX,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAAgD,Y,0BAA7CA,mBAAA,CAAqB,gBAAb,MAAI,sBARvBY,gBAAA,CAQgC,GAAC,GAAAC,gBAAA,CAAGV,KAAA,CAAAO,SAAS,CAACN,GAAG,iB,GACzCJ,mBAAA,CAA8D,Y,0BAA3DA,mBAAA,CAA4B,gBAApB,aAAW,sBAT9BY,gBAAA,CASuC,GAAC,GAAAC,gBAAA,CAAGV,KAAA,CAAAO,SAAS,CAACI,UAAU,iB,GACvDd,mBAAA,CAAsD,Y,0BAAnDA,mBAAA,CAAwB,gBAAhB,SAAO,sBAV1BY,gBAAA,CAUmC,GAAC,GAAAC,gBAAA,CAAGV,KAAA,CAAAO,SAAS,CAACK,MAAM,iB,GAC/Cf,mBAAA,CAA0D,Y,0BAAvDA,mBAAA,CAAwB,gBAAhB,SAAO,sBAX1BY,gBAAA,CAWmC,GAAC,GAAAC,gBAAA,CAAGV,KAAA,CAAAO,SAAS,CAACM,UAAU,iB,GACnDhB,mBAAA,CAAkD,Y,0BAA/CA,mBAAA,CAAwB,gBAAhB,SAAO,sBAZ1BY,gBAAA,CAYmC,GAAC,GAAAC,gBAAA,CAAGV,KAAA,CAAAO,SAAS,CAACO,EAAE,iB,OAZnDC,mBAAA,gBAeiBf,KAAA,CAAAgB,IAAI,I,cAAfpB,mBAAA,CAEM,OAFNqB,UAEM,EAAAP,gBAAA,CADDV,KAAA,CAAAgB,IAAI,oBAhBfD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}